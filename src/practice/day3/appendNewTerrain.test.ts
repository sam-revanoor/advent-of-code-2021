import { appendNewTerrain } from "./appendNewTerrain";

const sampleInput = [
  [".", ".", "#", "#", ".", ".", ".", ".", ".", ".", "."],
  ["#", ".", ".", ".", "#", ".", ".", ".", "#", ".", "."],
  [".", "#", ".", ".", ".", ".", "#", ".", ".", "#", "."],
  [".", ".", "#", ".", "#", ".", ".", ".", "#", ".", "#"],
  [".", "#", ".", ".", ".", "#", "#", ".", ".", "#", "."],
  [".", ".", "#", ".", "#", "#", ".", ".", ".", ".", "."],
  [".", "#", ".", "#", ".", "#", ".", ".", ".", ".", "#"],
  [".", "#", ".", ".", ".", ".", ".", ".", ".", ".", "#"],
  ["#", ".", "#", "#", ".", ".", ".", "#", ".", ".", "."],
  ["#", ".", ".", ".", "#", "#", ".", ".", ".", ".", "#"],
  [".", "#", ".", ".", "#", ".", ".", ".", "#", ".", "#"],
];

const sampleOutput = [
  [
    ".",
    ".",
    "#",
    "#",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "#",
    "#",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    "#",
    ".",
    ".",
    ".",
    "#",
    ".",
    ".",
    ".",
    "#",
    ".",
    ".",
    "#",
    ".",
    ".",
    ".",
    "#",
    ".",
    ".",
    ".",
    "#",
    ".",
    ".",
  ],
  [
    ".",
    "#",
    ".",
    ".",
    ".",
    ".",
    "#",
    ".",
    ".",
    "#",
    ".",
    ".",
    "#",
    ".",
    ".",
    ".",
    ".",
    "#",
    ".",
    ".",
    "#",
    ".",
  ],
  [
    ".",
    ".",
    "#",
    ".",
    "#",
    ".",
    ".",
    ".",
    "#",
    ".",
    "#",
    ".",
    ".",
    "#",
    ".",
    "#",
    ".",
    ".",
    ".",
    "#",
    ".",
    "#",
  ],
  [
    ".",
    "#",
    ".",
    ".",
    ".",
    "#",
    "#",
    ".",
    ".",
    "#",
    ".",
    ".",
    "#",
    ".",
    ".",
    ".",
    "#",
    "#",
    ".",
    ".",
    "#",
    ".",
  ],
  [
    ".",
    ".",
    "#",
    ".",
    "#",
    "#",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "#",
    ".",
    "#",
    "#",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    ".",
    "#",
    ".",
    "#",
    ".",
    "#",
    ".",
    ".",
    ".",
    ".",
    "#",
    ".",
    "#",
    ".",
    "#",
    ".",
    "#",
    ".",
    ".",
    ".",
    ".",
    "#",
  ],
  [
    ".",
    "#",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "#",
    ".",
    "#",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "#",
  ],
  [
    "#",
    ".",
    "#",
    "#",
    ".",
    ".",
    ".",
    "#",
    ".",
    ".",
    ".",
    "#",
    ".",
    "#",
    "#",
    ".",
    ".",
    ".",
    "#",
    ".",
    ".",
    ".",
  ],
  [
    "#",
    ".",
    ".",
    ".",
    "#",
    "#",
    ".",
    ".",
    ".",
    ".",
    "#",
    "#",
    ".",
    ".",
    ".",
    "#",
    "#",
    ".",
    ".",
    ".",
    ".",
    "#",
  ],
  [
    ".",
    "#",
    ".",
    ".",
    "#",
    ".",
    ".",
    ".",
    "#",
    ".",
    "#",
    ".",
    "#",
    ".",
    ".",
    "#",
    ".",
    ".",
    ".",
    "#",
    ".",
    "#",
  ],
];

const sampleInput2 = [
  ["hey", "hey", "bye", "bye", "hey", "hey", "hey", "hey", "hey", "hey", "hey"],
  ["#", ".", ".", ".", "#", ".", ".", ".", "#", ".", "."],
  [".", "#", ".", ".", ".", ".", "#", ".", ".", "#", "."],
  ["hey", "hey", "bye", "hey", "bye", "hey", "hey", "hey", "bye", "hey", "bye"],
  [".", "#", ".", ".", ".", "#", "#", ".", ".", "#", "."],
  [".", ".", "#", ".", "#", "#", ".", ".", ".", ".", "."],
  [".", "#", ".", "#", ".", "#", ".", ".", ".", ".", "#"],
  [".", "#", ".", ".", ".", ".", ".", ".", ".", ".", "#"],
  ["#", ".", "#", "#", ".", ".", ".", "#", ".", ".", "."],
  ["#", ".", ".", ".", "#", "#", ".", ".", ".", ".", "#"],
  ["hey", "bye", "hey", "hey", "bye", "hey", "hey", "hey", "bye", "hey", "bye"],
];

const sampleOutput2 = [
  [
    "hey",
    "hey",
    "bye",
    "bye",
    "hey",
    "hey",
    "hey",
    "hey",
    "hey",
    "hey",
    "hey",
    "hey",
    "hey",
    "bye",
    "bye",
    "hey",
    "hey",
    "hey",
    "hey",
    "hey",
    "hey",
    "hey",
  ],
  [
    "#",
    ".",
    ".",
    ".",
    "#",
    ".",
    ".",
    ".",
    "#",
    ".",
    ".",
    "#",
    ".",
    ".",
    ".",
    "#",
    ".",
    ".",
    ".",
    "#",
    ".",
    ".",
  ],
  [
    ".",
    "#",
    ".",
    ".",
    ".",
    ".",
    "#",
    ".",
    ".",
    "#",
    ".",
    ".",
    "#",
    ".",
    ".",
    ".",
    ".",
    "#",
    ".",
    ".",
    "#",
    ".",
  ],
  [
    "hey",
    "hey",
    "bye",
    "hey",
    "bye",
    "hey",
    "hey",
    "hey",
    "bye",
    "hey",
    "bye",
    "hey",
    "hey",
    "bye",
    "hey",
    "bye",
    "hey",
    "hey",
    "hey",
    "bye",
    "hey",
    "bye",
  ],
  [
    ".",
    "#",
    ".",
    ".",
    ".",
    "#",
    "#",
    ".",
    ".",
    "#",
    ".",
    ".",
    "#",
    ".",
    ".",
    ".",
    "#",
    "#",
    ".",
    ".",
    "#",
    ".",
  ],
  [
    ".",
    ".",
    "#",
    ".",
    "#",
    "#",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "#",
    ".",
    "#",
    "#",
    ".",
    ".",
    ".",
    ".",
    ".",
  ],
  [
    ".",
    "#",
    ".",
    "#",
    ".",
    "#",
    ".",
    ".",
    ".",
    ".",
    "#",
    ".",
    "#",
    ".",
    "#",
    ".",
    "#",
    ".",
    ".",
    ".",
    ".",
    "#",
  ],
  [
    ".",
    "#",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "#",
    ".",
    "#",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    ".",
    "#",
  ],
  [
    "#",
    ".",
    "#",
    "#",
    ".",
    ".",
    ".",
    "#",
    ".",
    ".",
    ".",
    "#",
    ".",
    "#",
    "#",
    ".",
    ".",
    ".",
    "#",
    ".",
    ".",
    ".",
  ],
  [
    "#",
    ".",
    ".",
    ".",
    "#",
    "#",
    ".",
    ".",
    ".",
    ".",
    "#",
    "#",
    ".",
    ".",
    ".",
    "#",
    "#",
    ".",
    ".",
    ".",
    ".",
    "#",
  ],
  [
    "hey",
    "bye",
    "hey",
    "hey",
    "bye",
    "hey",
    "hey",
    "hey",
    "bye",
    "hey",
    "bye",
    "hey",
    "bye",
    "hey",
    "hey",
    "bye",
    "hey",
    "hey",
    "hey",
    "bye",
    "hey",
    "bye",
  ],
];

describe("appendNewTerrain", () => {
  it("expands terrain if path has no more columns", () => {
    expect(appendNewTerrain(sampleInput)).toEqual(sampleOutput);
    expect(appendNewTerrain(sampleInput2)).toEqual(sampleOutput2);
  });
});
